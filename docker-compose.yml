services:
  memcached-rinha:
    image: memcached:1.6.38-alpine
    hostname: memcached-rinha
    container_name: memcached-rinha
    ports: 
      - "11211:11211"
    networks:
      - application-internal
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "50MB"

  nginx-rinha:
    image: nginx:1.29.0-alpine
    hostname: nginx-rinha
    container_name: nginx-rinha
    depends_on:
      application-node-1: 
        condition: service_started
      application-node-2: 
        condition: service_started
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "9999:9999"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9999/health"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 20s
    networks:
      - application-internal
    deploy:
      resources:
        limits:
          cpus: "0.15"
          memory: "60MB"

  database-rinha:
    image: postgres:17.5-alpine
    hostname: database-rinha
    container_name: database-rinha
    env_file: .env
    ports:
      - "5432:5432"
    networks:
      - application-internal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rinha-enferrujada -d rinha-enferrujada"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s 
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "165MB"

  application-node-1: &application-node-1
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        - DATABASE_URL=${DATABASE_URL}
    hostname: application-node-1
    container_name: application-node-1
    env_file: .env
    environment:
      - PORT=8080
      - COST=1
    networks:
      - application-internal
    depends_on:
      database-rinha:
        condition: service_healthy
      memcached-rinha:
        condition: service_started
      migrations-rinha:
        condition: service_completed_successfully 
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "30MB" 
  
  application-node-2:
    <<: *application-node-1
    hostname: application-node-2
    container_name: application-node-2
    environment:
      - PORT=8081
      - COST=2

  migrations-rinha:
    build:
      context: .
      dockerfile: Dockerfile.migrations
      args:
        - DATABASE_URL=${DATABASE_URL}
    hostname: migrations-rinha
    container_name: migrations-rinha
    env_file: .env
    networks:
      - application-internal
    depends_on:
      database-rinha:
        condition: service_healthy
    command: ["sh", "-c", "diesel setup && diesel migration run"]
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "30MB"
    restart: on-failure

networks:
  application-internal:
    driver: bridge
